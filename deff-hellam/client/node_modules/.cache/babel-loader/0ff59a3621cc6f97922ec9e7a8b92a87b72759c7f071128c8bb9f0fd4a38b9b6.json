{"ast":null,"code":"var _jsxFileName = \"F:\\\\deffi-hellam\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [encryptedText, setEncryptedText] = useState(\"\");\n  function decryptData(encryptedData, key) {\n    const bytes = CryptoJS.AES.decrypt(encryptedData, key);\n    const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\n    return decryptedData;\n  }\n  const encryptData = async data => {\n    const key = \"secret_key\"; // Replace with your own secret key\n    const datas = CryptoJS.AES.encrypt(data, key).toString();\n    const res = await axios.post(\"http://localhost:5000/encryptdata\", {\n      encryptedText: datas\n    });\n    console.log({\n      res\n    });\n    const decryptDatas = decryptData(res.data.encryptedData, key);\n    console.log(\"decryptDatas>>>>>>>>>> \", decryptDatas);\n    setEncryptedText(decryptDatas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => encryptData(inputText),\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"encryptedText :\", String(encryptedText)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ze2tFsd7oQXeuSl79MSk+BMCzfU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CryptoJS","axios","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","encryptedText","setEncryptedText","decryptData","encryptedData","key","bytes","AES","decrypt","decryptedData","toString","enc","Utf8","encryptData","data","datas","encrypt","res","post","console","log","decryptDatas","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","String","_c","$RefreshReg$"],"sources":["F:/deffi-hellam/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [encryptedText, setEncryptedText] = useState(\"\");\nfunction decryptData(encryptedData, key) {\n  const bytes = CryptoJS.AES.decrypt(encryptedData, key);\n  const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\n  return decryptedData;\n}\n  const encryptData = async (data) => {\n    const key = \"secret_key\"; // Replace with your own secret key\n    const datas = (CryptoJS.AES.encrypt(data, key).toString());\n    const res = await axios.post(\"http://localhost:5000/encryptdata\", {\n      encryptedText: datas,\n    });\n    console.log({res})\n    const decryptDatas = decryptData(res.data.encryptedData,key)\n    console.log(\"decryptDatas>>>>>>>>>> \",decryptDatas);\n    setEncryptedText(decryptDatas)\n  };\n  \n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <button onClick={() => encryptData(inputText)}>Encrypt</button>\n      <div>encryptedText :{String(encryptedText)}</div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,SAASW,WAAWA,CAACC,aAAa,EAAEC,GAAG,EAAE;IACvC,MAAMC,KAAK,GAAGb,QAAQ,CAACc,GAAG,CAACC,OAAO,CAACJ,aAAa,EAAEC,GAAG,CAAC;IACtD,MAAMI,aAAa,GAAGH,KAAK,CAACI,QAAQ,CAACjB,QAAQ,CAACkB,GAAG,CAACC,IAAI,CAAC;IACvD,OAAOH,aAAa;EACtB;EACE,MAAMI,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,MAAMT,GAAG,GAAG,YAAY,CAAC,CAAC;IAC1B,MAAMU,KAAK,GAAItB,QAAQ,CAACc,GAAG,CAACS,OAAO,CAACF,IAAI,EAAET,GAAG,CAAC,CAACK,QAAQ,CAAC,CAAE;IAC1D,MAAMO,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,mCAAmC,EAAE;MAChEjB,aAAa,EAAEc;IACjB,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC;MAACH;IAAG,CAAC,CAAC;IAClB,MAAMI,YAAY,GAAGlB,WAAW,CAACc,GAAG,CAACH,IAAI,CAACV,aAAa,EAACC,GAAG,CAAC;IAC5Dc,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACC,YAAY,CAAC;IACnDnB,gBAAgB,CAACmB,YAAY,CAAC;EAChC,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,SAAU;MACjB0B,QAAQ,EAAGC,CAAC,IAAK1B,YAAY,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFnC,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACd,SAAS,CAAE;MAAAuB,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DnC,OAAA;MAAA0B,QAAA,GAAK,iBAAe,EAACW,MAAM,CAAChC,aAAa,CAAC;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/BID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}